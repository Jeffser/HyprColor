#!/usr/bin/env bash
# CHECK ARGUMENTS
arg_lines=false
arg_no_image=false

for arg in "$@"; do
  if [ "$arg" = "--lines" ]; then
    arg_lines=true #Add lines at bottom
  fi
  if [ "$arg" = "--no_image" ]; then
    arg_no_image=true
  fi
done

clear

OS_NAME=$(cat /etc/*-release | grep PRETTY_NAME | cut -d '"' -f 2)

if [ "$TERM" == "xterm-kitty" ] && [ "$arg_no_image" = false ]; then
  kitten icat --place 15x15@2x1 ~/.face
  SPACES=16
else
  SPACES=0
fi

write_line () {
  for i in $(seq $SPACES $END); do
    echo -n -e " "
  done
  echo -e "\e[1;37m$LINE" | cut -c1-$(($COLUMNS - 3))
}

LINES=(
  "󱁖 Welcome   \e[34m${USER^}!"
  "󰒋 Hostname: \e[36m${HOSTNAME^}"
  "󰍹 Desktop:  \e[35m${XDG_CURRENT_DESKTOP^}"
  "󰌽 Distro:   \e[32m${OS_NAME^}"
  " Terminal: \e[33m${TERM^}"
)
for LINE in "${LINES[@]}"; do
  write_line
  if [ "$SPACES" != 0 ]; then SPACES=18; fi 
done

if [ "$(playerctl metadata 2>&1 | tr -d '\n')" != "No player could handle this command" ]; then
  LINE="󰝚 Playing:  \e[31m$(playerctl metadata title | sed -e 's/ - YouTube Music//; s/ - YouTube//; s/&/\&amp;/g; s/"/\\\"/g' | tr -d '\n')"
  write_line
else
  echo
fi

if $arg_lines; then
  LINE="-"
  for i in $(seq $(($COLUMNS - $SPACES - 1)) $END); do
    LINE="${LINE}-"
  done
  write_line
fi
